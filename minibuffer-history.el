;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(ido-file-history ido-buffer-history magit-git-command-history magit-read-rev-history history set-variable-value-history input-method-history regexp-search-ring regexp-history sgml-tag-history string-rectangle-history rails-rake:history search-ring read-expression-history face-name-history rails-test:history ruby-test:gem-history rails-script:history-of-generate ack-regexp-history shell-command-history minibuffer-history-search-history rails-script:history-of-destroy extended-command-history imenu--history-list compile-history grep-regexp-history query-replace-history minibuffer-history bookmark-history buffer-name-history file-name-history))
(setq ido-file-history '("base_rate.css.scss" nil "haml-mode.el" "LICENSE" "rhtml-mode.el" "base_rate.css.scss" "haml-mode.el" "sass-mode.el" "base_rate.css.scss" "sass-mode.el" "base_rate.css.scss" nil "n" "c/n" "con" "finap" "finapp/" "mo/" "mo" "sp" "Ge" "Ge." "Ge" "pre" "bo" "con" "fmb" "fm" "con" "sp_l"))
(setq ido-buffer-history '("*Messages*" "css-mode.el" "*Messages*" "vi" "_h" "_hi" "consetu" "calc" "coma" "pbm" "cas" "c_a" "pbm" "pbs" "pbm" "pbsws" "cass" "pbsw" "pbm" "pcts" "pac" "pb" "payb" "ch" "auditor" "aud" "cls" "sp" "ch" "Ge"))
(setq magit-read-rev-history '("d38657d" "HEAD"))
(setq set-variable-value-history '("t"))
(setq regexp-search-ring '("[A-Z]" "[A-Z]\\{4\\} " "[A-Z]\\{4\\}" "[A-Z]" "([A-Z])\\{1\\}"))
(setq regexp-history '("@result\\."))
(setq search-ring '("css" "f" "liet" "autoload" "scssi" "haml" "haml-mode" "haml-mo" "haml-mode" "sass-mode" "sass" "fm_auditor" "customis" "logged" "change" "history"))
(setq read-expression-history '("(let ((buffer (url-retrieve-synchronously
	       \"http://tromey.com/elpa/package-install.el\")))
  (save-excursion
    (set-buffer buffer)
    (goto-char (point-min))
    (re-search-forward \"^$\" nil 'move)
    (eval-region (point) (point-max))
    (kill-buffer (current-buffer))))"))
(setq ruby-test:gem-history '("cd /Users/shevaun/src/github/shevaun/rubycas-client/lib/casclient/;ruby -I.:.. client.rb --runner=emacs --no-use-color" "cd /Users/shevaun/src/nzpost/rubycas-server/lib/casserver/;ruby -I.:.. server.rb --runner=emacs --no-use-color"))
(setq rails-script:history-of-generate '("migration" "model" "migration"))
(setq ack-regexp-history '("apropos-macrop" "flet" #("fm_base" 0 7 (fontified t face font-lock-string-face)) #("fm_auditor" 0 10 (fontified t)) "FmBase" "update_change_description" "shared/change_log" "render :partial => 'shared/change_log'" "render :partial => 'change_log'" "render 'change_log'" "change_log" "view_change_logs" #("update_or_render" 0 16 (fontified t)) "change_log" #("MoveToUnallocatedBatch" 0 22 (face font-lock-type-face fontified t)) "history" "change_description" "comparable_fields" "comparable_associations" #("comparable_entities" 0 18 (face font-lock-function-name-face fontified t) 18 19 (face font-lock-function-name-face syntax-table nil fontified t)) #("comparable_associations" 0 22 (face font-lock-function-name-face fontified t) 22 23 (face font-lock-function-name-face syntax-table nil fontified t)) #("comparable_fields" 0 16 (face font-lock-function-name-face fontified t) 16 17 (face font-lock-function-name-face syntax-table nil fontified t)) #("change_description" 0 17 (fontified t) 17 18 (fontified t)) "ChangeLog" "make_new" "ChangeLog.make_new" "resubmit!" "ChangeLog.make_new" "approve!" #("approve" 0 7 (face font-lock-function-name-face fontified t))))
(setq shell-command-history '("which ctags"))
(setq extended-command-history '("eval-buffer" "sass-mode" "eval-buffer" "list-packages" "eval-buffer" "scss-mode" "list-packages" "package-refresh-contents" "list-packages" "package-list-packages" "sass-mode" "list-packages" "ruby-mode" "make-directory" "ido-mode" "make-directory" "ruby-mode" "make-directory" "insert-kbd-macro" "count-lines-region" "insert-kbd-macro" "make-directory" "edit-bookmarks" "make-directory" "recover-this-file" "make-directory" "delete-file" "rhtml-mode" "rails-minor-mode" "list-bookmarks"))
(setq grep-regexp-history '("required" "dpid" "errors" "@nzpost" "claim_pin" "RubyCAS"))
(setq query-replace-history '("change_log" "history" "script" "calculation_script" "12345" "888" "PaymentBatchSwitcher" "commissionadjustmentservice" "to_batch" "existing_payment_batch" "payable_description" "basic_text" "type_of_move" "payment_batch_service" "payment_batch_service" "888" "12345" "adjustment" "commission" "adjustment" "commission" "commission" "adjustment" "from_batch" "original_batch" "to_payment_batch" "new_batch" "from_payment_summary" "from_description" "to_payment_summary"))
(setq minibuffer-history '("80" "112" "1218" "110" "143" "fm_com	" "19" "221" "188" "62" "55" "42" "35" "19" "22" "19" "56" "45" "19" "34" "44" "54" "212" "229" "94" "93" "85" "36" "76" "119"))
(setq bookmark-history '("fm_admin" "preferences" "fm_admin" "preferences" "fm_admin" "preferences" "fm_admin" "preferences" "fm_admin" "fm_trb_bfs" "fm_commissions" "fm_rcm" "fm_credit" "fm_admin" "fm_commissions" "fm_rcm" "fm_reference_data" "fm_commissions" "fm_trb_bfs" "fm_commissions" "fm_admin" "fm_trb_bfs" "fm_rcm" "fm_trb_bfs" "fm_admin" "fm_commissions" "fm_admin" "fm_commissions" "fm_rcm" "fm_commissions"))
(setq buffer-name-history '("*Messages*" "css-mode.el" "*Messages*" "config.ru" "README" "show.html.erb" "_view_change_logs.html.erb" "_history.html.erb" "contract_setup_script.rb" "calculation_script.rb" "setup_dev_env.sh" "script_formula.rb" "commission_adjustment.rb" "payment_batch_move.rb" "commission_adjustment_service.rb" "commission_adjustment.rb" "payment_batch_move.rb" "payment_batch_switcher.rb" "payment_batch_move.rb" "payment_batch_switcher_spec.rb" "commission_adjustment_service_spec.rb" "payment_batch_switcher.rb" "payment_batch_move.rb" "commission_adjustment_service.rb" "partner_commission_type_spec.rb" "auditor.rb<2>" "schema.rb<2>" "partner_commission_type.rb" "bank_accounts_controller.rb" "config.ru"))
(setq file-name-history '("~/Library/Application Support/Aquamacs Emacs/url/cookies" "~/Library/Preferences/Aquamacs Emacs/Preferences.el" "/Users/shevaunc/src/ibsa/fm_admin/app/assets/stylesheets/base_rate.css.scss" "~/Library/Preferences/Aquamacs Emacs/Preferences.el" "~/Library/Application Support/Aquamacs Emacs/elpa/css-mode-1.0/css-mode-autoloads.el" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/gnu/archive-contents" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/marmalade/archive-contents" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/elpa/archive-contents" "~/Library/Application Support/Aquamacs Emacs/css-mode.el" "/Users/shevaunc/Library/Application Support/Aquamacs Emacs/haml-mode.el" "~/Library/Preferences/Aquamacs Emacs/Preferences.el" "~/.emacs.d/rails-minor-mode/rails.el" "~/.emacs.d/rails-minor-mode/rails-lib.el" "~/.emacs.d/rails-minor-mode/rails-project.el" "~/.emacs.d/rails-minor-mode/rails-scripts.el" "~/.emacs.d/rails-minor-mode/rails-speedbar-feature.el" "~/.emacs.d/rails-minor-mode/rails.el" "~/.emacs.d/rails-minor-mode/rails-speedbar-feature.el" "~/.emacs.d/rails-minor-mode/rails-scripts.el" "~/.emacs.d/rails-minor-mode/rails-project.el" "~/.emacs.d/rails-minor-mode/rails-lib.el" #("/Users/shevaunc/.emacs.d/rails-minor-mode/LICENSE" 16 24 (face flx-highlight-face)) "/Users/shevaunc/Library/Application Support/Aquamacs Emacs/rhtml-minor-mode/rhtml-mode.el" "~/Library/Preferences/Aquamacs Emacs/Preferences.el" "/Users/shevaunc/src/ibsa/fm_admin/app/assets/stylesheets/base_rate.css.scss" "~/src/ibsa/fm_admin/db/schema.rb" "~/Library/Application Support/Aquamacs Emacs/elpa/scss-mode-0.5.0/scss-mode-autoloads.el" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/gnu/archive-contents" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/marmalade/archive-contents" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/elpa/archive-contents" "~/Library/Preferences/Aquamacs Emacs/Preferences.el" "~/Library/Application Support/Aquamacs Emacs/elpa/archives/gnu/archive-contents"))
